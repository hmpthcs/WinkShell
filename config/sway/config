# Some of this borrowed from https://github.com/0cc4m/pinenote-misc/blob/main/sway/config/sway/config
# Sway config for WinkShell on Pinenote

############
# ENV VARS #
############

### For sov to work: ###
# exec_always systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK

#### 'This command passes environment variables from the window manager to session dbus' [swaywm wiki]
exec dbus-update-activation-environment --all

# (alternate, old) exec dbus-update-activation-environment --systemd DISPLAY I3SOCK SWAYSOCK WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway XDG_SESSION_DESKTOP=sway

#### gnome-keyring ###
exec gnome-keyring-daemon --start --components=gpg,pkcs11,secrets,ssh 

#################
# Notifications #
#################

exec mako


##################
# SWAY VARIABLES #
##################

# Mod4=Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

### TERMINAL ###
set $term alacritty

### MENU ###
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.

##set $menu wofi --show drun -i | xargs swaymsg exec --

set $menu bemenu-run -i -l 12 -c -n -M 0 --fn "Bitter Pro 14" --nb "#ffffff" \
  --nf "#000000" --ab "#cccccc" --af "#000000" --bdr "#000000" --hf "#ffffff" \
  --hb "#000000" -C -B 1 -W 0.5 --fbb "#222222" --fbf "#ffffff" --cw 1 \
  --tb "#000000" --tf "#ffffff" --fb "#222222" --ff "#ffffff" -H 40 -R 3 \
    | xargs swaymsg exec --


########################
# Output configuration #
########################

## Pinenote display is called DPI-1. resolution 1872x1404@85Hz

## You can get the names of your outputs by running: swaymsg -t get_outputs
## output DPI-1 background #FFFFFF solid_color

output DPI-1 {
  mode 1872x1404@40Hz
  max_render_time off
  subpixel none
#  adaptive_sync on
  background #cccccc solid_color
  }

### Disable xwayland ###
xwayland disable

######################
# Idle configuration #
######################

# Example configuration:

# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
#
#
### Occ4m's swayidle: ###
# exec_always --no-startup-id flock -n .swayidle.lock swayidle timeout 600 "systemctl suspend" \
# before-sleep "~/.local/bin/before_sleep.sh" after-resume "~/.local/bin/after_resume.sh"


### SEAT ###
#seat seat0 {
#  hide_cursor when-typing enable
#  hide_cursor 100
#  }

# seat <name> idle_wake <sources...>
#Sets the set of input event sources which
#can wake the seat from its idle state, as
#a space separated list of source names.
#Valid names are "keyboard", "pointer",
#"touchpad", "touch", "tablet_pad",
#"tablet_tool", and "switch". The default
#behavior is to wake from idle on any event.  

#######################  
# Input configuration #
#######################

## This was at one point necessary on the Pinenote, but no longer so. Rotates touchscreen 180deg.
# input "type:tablet_tool" calibration_matrix -1 0 1 0 -1 1


# input 0:0:cyttsp5 map_to_output DPI-1

input * {
  map_to_output DPI-1
#  drag enabled
#  drag_lock enabled
#  tap enabled
  pointer_accel 0
  }

################
# Key bindings #
################

# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term
    bindsym $mod+Shift+t exec foot

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
  #  bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
  #  bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
  #  bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
  #  bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
  #  bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
 #   bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

##############
# Status Bar #
##############

##BAR NOT STARTED IN WINKSHELL_INIT
# exec_always waybar -c "~/.config/waybar/waybar_center.config"

bar {
    id showbtn
    swaybar_command "waybar -c ~/.config/waybar/waybar_showbtn.config"
    mode hide
    hidden_state show
    position top
}

bar {
        id hidebtn
        swaybar_command "waybar -c ~/.config/waybar/waybar_hidebtn.config"
        mode invisible
        hidden_state show
        position top
 }

bar {
    id center
    swaybar_command "waybar -c -/.config/waybar/waybar_center.config"
    mode invisible
    hidden_state show
    position bottom
}


# bar {
#	id hw_expanded
#	swaybar_command true
#	mode invisible
#	hidden_state show
#	position top
#}

##exec_always "waybar -c ~/.config/waybar/waybar_center.config"


### Create new workspace on next / prev if it doesnt exist ####

set $next_or_new swaymsg -r -t get_workspaces | jq -r --arg OUTPUT $(swaymsg -t get_outputs -r | jq -r '.[] | select(.focused == true) | .name') '(. | (max_by(.num) | .num)) as $max | [.[] | select(.output == $OUTPUT)] | (max_by(.num) | .num) as $maxOutput | (.[] | select(.focused == true) | .num) as $current | if $maxOutput > $current then "next_on_output" else $max + 1 end'
    set $previous_or_first swaymsg -r -t get_workspaces | jq -r --arg OUTPUT $(swaymsg -t get_outputs -r | jq -r '.[] | select(.focused == true) | .name') '(. | (max_by(.num) | .num)) as $max | [.[] | select(.output == $OUTPUT)] | (min_by(.num) | .num) as $minOutput | (.[] | select(.focused == true) | .num) as $current | if $minOutput < $current then "prev_on_output" else $current end'

    bindsym $mod+Right exec swaymsg "workspace $($next_or_new)"
    bindsym $mod+Left exec swaymsg "workspace $($previous_or_first)"

    bindsym $mod+Shift+Right exec swaymsg "move container to workspace $($next_or_new), workspace next_on_output"
    bindsym $mod+Shift+Left exec swaymsg "move container to workspace $($previous_or_first), workspace prev_on_output"
############


# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.

tiling_drag enable
tiling_drag_threshold 3
floating_modifier Alt normal

#################################
# Borders and appearance stuff: #
#################################

#
#set white
#set gray1
#set gray2
#set gray3
#set gray4
#set gray5
#set gray6
#set gray7
#set gray8
#set gray9
#set gray10
#set gray11
#set gray12
#set gray13
#set gray14
#set gray15
#set black
#


### Gaps ###
## gaps outer | top | bottom <amount>

#gaps top 5
#gaps bottom 4
#gaps left 4
#gaps right 4

gaps inner 0
gaps outer 3

### Borders ###
## show borders only if ws has >1 window
smart_borders on

#hide_edge_borders both

## do not show gaps only if there is exactly one container (app / tabview / stack)
# smart_gaps on
## might re-enable this line if toggling big borders for resizing looks ugly  hide_edge_borders vertical

default_border pixel 1
default_floating_border normal 1
# titlebar_position bottom
titlebar_border_thickness 1
titlebar_padding 1 1
floating_maximum_size 600 x 400
title_align center
font pango:Bitter Pro 10


#client.<class> <border> <background> <text> [indicator [child border]]
# border = border around title bar
# background = background of title bar
# text = text color of title bar 
# indicator = color to paint the side of a window/container where a new view will open
# child border = border around view itself


#client.focused_inactive #666666 #999999 #ffffff #aaaaaa #aaaaaa
###777777 #777777 #ffffff #a3a3a3 #a3a3a3

##
#client.focused #333333 #111111 #ffffff #000000 #000000
#client.unfocused #aaaaaa #dddddd #000000 #aaaaaa #aaaaaa
#client.focused_tab_title #11111100 #111111 #ffffff
##


## generic window that is focused:
client.focused #000000 #000000 #ffffff #000000 #000000

## generic window that isn't focused but is visible:
client.unfocused #bbbbbb #eeeeee #000000 #bbbbbb #bbbbbb

## Example: [**this one]tabbed container --> child tabbed container --> child window [focused]:
client.focused_inactive #dddddd #333333 #ffffff #bbbbbb #bbbbbb



set {
	$ii inhibit_idle focus
	$game inhibit_idle focus; floating enable; border none; fullscreen enable; shadows disable
	$popup floating enable; border pixel 1; sticky enable; shadows disable
	$float floating enable; border pixel 1; shadows disable
	$video inhibit_idle fullscreen; max_render_time 1
	$important inhibit_idle open; floating enable; border pixel 1
	$max inhibit_idle visible; floating enable; sticky enable; border pixel 1
}



no_focus [app_id="org.pwmt.zathura"]

#### for_window <criteria> <command> ###


### For gurk+yazi tabbed container
#  first move focus to window with title "GurkMain"
#  then create a horizontal split
#  then move focus to most recently focused child container
#  finally, set child container to have tabbed layout

for_window [title="GurkFiles"] {
	mark --add "gurkfiles"
	focus parent
	split horizontal
	mark --add "gurkparent"
	focus child
	layout tabbed
	}
	
#	no_focus
#    focus [con_mark="gurkgroup"]
#	move window to mark "gurkgroup"
#	focus parent
#	title_format "T[Gurk Group]"
#	focus child
#	focus child split horizontal
#	layout tabbed


for_window [title="GurkMain"] {
    [title="GurkMain"] focus
#	title_format "T[Gurk Group]"
	focus parent
	mark --add "gurkgroup"
	split horizontal
	focus child
	layout tabbed
#	swaymsg	exec "[title="GurkMain"] focus" && swaymsg exec "focus parent" && title_format "T[Gurk Group]"
}

### For tabbed qutebrowser ################################

for_window [app_id="org.qutebrowser.qutebrowser"] {
	layout tabbed
	border normal 1
}

no_focus [app_id="org.qutebrowser.qutebrowser"]

###########################################################

## testing 
for_window [app_id="mugenpen"] {
  floating enable 
  resize set width 600 height 400
}

### For `helyaz.sh`, the helix-yazi filepicker ############

for_window [app_id = "floating_alacritty"] floating enable

###########################################################

for_window {
    [app_id="com.igalia.Cog"] border normal
    [app_id="org.github.flxzt.rnote"] max_render_time off
    [app_id="org.github.com.xournalpp.xournalpp"] max_render_time off

    [title="Open file"] resize set width 600 height 400, move position 10ppt 10ppt, border normal 1
    [title="(Import) (.)"] resize set width 600 height 400, border normal 1

  	[app_id="org.pwmt.zathura"] {
	  floating enable
	  resize set width 45ppt height 95ppt
	  move position 50ppt 5ppt
	}

        [title="dropdown"] {
          floating enable
          resize set width 94ppt height 400px
          move position 3ppt 20px
       } 

#video - inhibit_idle fullscreen; border none; max_render_time off
	[instance="chromium"] $video
	[app_id="mpv"] $video
	[class="firefox"] $video
	[app_id="firefox"] $video
	[class="Nightly"] $video

  [app_id="anki"] $float

  [title="(?:Open|Save) (?:File|Folder|As)"] floating enable, resize set width 400 height 300, move position 0ppt 0ppt

  [app_id="soffice"] floating enable, resize set width 300px height 300px, move position 10ppt 0ppt

  [app_id="pavucontrol"] {
   floating enable
   resize set width 100ppt
   resize set height 360px
   move position 0 30
  }

  [app_id="mpv"] {
   floating enable
   resize set width 600px
   resize set height 60px
   move position 10ppt 10ppt
  }

  [app_id="iwgtk"] {
    floating enable
    resize set width 500px
    resize set height 500px
  }

  [app_id="blueman-manager"] {
    floating enable
  }
}

# bindsym BTN_RIGHT exec /home/m4n4pe/git/WinkShell/wmenuawait.sh

#exec_always systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
# exec enable-ibus-daemon

# Start winkshell services with winkshell_init.sh:
#  waybars, wvkbd, rot8, lisgd, wcp, sov, swovcp, autotiling.py
#  Then trigger a global refresh
exec_always /usr/local/bin/winkshell_init.sh

# Input method editor I guess
#exec_always ibus-daemon -drx
exec fcitx5 -d -r --enable all

# (done in winkshell_init.sh)
#exec_always python3 /usr/local/bin/autotiling.py

# Test script to change borders for focused containers
#exec_always killall /usr/local/bin/winkshell_borderfocus.py ; /usr/local/bin/winkshell_borderfocus.py

# (done in winkshell_init.sh)
# exec_always waybar -c ~/.config/waybar/waybar_showbtn.config & waybar -c ~/.config/waybar/waybar_center.config & waybar -c ~/.config/waybar/waybar_hidebtn.config &


include /etc/sway/config.d/*
